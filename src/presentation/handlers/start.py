"""
Start command handler
"""

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from loguru import logger

from src.domain.entities.user import User
from src.domain.repositories.user_repository import UserRepository
from src.domain.use_cases.user.create_or_update_user import CreateOrUpdateUserUseCase
from src.infrastructure.database.session import get_db_session
from src.infrastructure.database.repositories.user_repository import SQLAlchemyUserRepository
from src.presentation.keyboards.inline import main_menu_keyboard
from src.utils.helpers import parse_referral_start_param, format_user_display_name

router = Router()


@router.message(CommandStart())
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user = message.from_user
        
        # –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        start_param = ""
        if message.text and len(message.text.split()) > 1:
            start_param = message.text.split()[1]
        
        referral_id = parse_referral_start_param(start_param)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        async with get_db_session() as session:
            user_repository = SQLAlchemyUserRepository(session)
            create_or_update_user_uc = CreateOrUpdateUserUseCase(user_repository)
            
            db_user = await create_or_update_user_uc.execute(user)
            
            # TODO: –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –µ—Å–ª–∏ referral_id
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        display_name = format_user_display_name(
            user.first_name, 
            user.last_name, 
            user.username
        )
        
        logger.info(f"User started bot: {display_name} (ID: {user.id})")
        if referral_id:
            logger.info(f"Referral detected: {referral_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–∏–ø–≤–∞–π–µ—Ä
        has_tripwire = False  # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ PaymentRepository
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–∏–ø–≤–∞–µ—Ä–æ–º
        await message.answer(
            "üé• <b>–í–∏–¥–µ–æ –¢–†–ò–ü–í–ê–ï–† –∑–∞ 1 —Ä—É–±.</b>\n\n"
            "üìö –û–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æ –ø–æ –æ—Å–Ω–æ–≤–∞–º –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏\n"
            "‚è∞ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n\n"
            "üí° –ü–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è!",
            reply_markup=main_menu_keyboard(has_tripwire=True)
        )
        
    except Exception as e:
        logger.error(f"Error in start command: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )
