#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –¥–ª—è prod —Å—Ä–µ–¥—ã

set -e

echo "üöÄ Starting production deployment..."

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="aptechka-bot-prod"
DOCKER_COMPOSE_FILE="docker-compose.prod.yml"
ENV_FILE=".env.prod"
BACKUP_DIR="backups"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
if [ ! -f "$DOCKER_COMPOSE_FILE" ]; then
    echo "‚ùå Docker compose file not found: $DOCKER_COMPOSE_FILE"
    exit 1
fi

if [ ! -f "$ENV_FILE" ]; then
    echo "‚ùå Environment file not found: $ENV_FILE"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p $BACKUP_DIR

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î
echo "üíæ Creating database backup..."
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="$BACKUP_DIR/backup_$TIMESTAMP.sql"

if docker exec aptechka_db_prod pg_dump -U aptechka_user aptechka_prod > $BACKUP_FILE; then
    echo "‚úÖ Database backup created: $BACKUP_FILE"
else
    echo "‚ö†Ô∏è Database backup failed, but continuing..."
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë Stopping existing containers..."
docker-compose -f $DOCKER_COMPOSE_FILE down

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤
echo "üì¶ Pulling latest images..."
docker-compose -f $DOCKER_COMPOSE_FILE pull

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üèóÔ∏è Starting containers..."
docker-compose -f $DOCKER_COMPOSE_FILE up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
echo "‚è≥ Waiting for database to be ready..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ë–î
echo "üîç Checking database health..."
until docker exec aptechka_db_prod pg_isready -U aptechka_user -d aptechka_prod; do
    echo "Waiting for database..."
    sleep 3
done

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üìä Applying database migrations..."
py -m alembic upgrade head

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üè• Checking services health..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
if curl -f http://localhost:8081/health; then
    echo "‚úÖ Webhook server is healthy"
else
    echo "‚ùå Webhook server health check failed"
    echo "üîÑ Rolling back..."
    
    # –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –æ–±—Ä–∞–∑—É
    docker-compose -f $DOCKER_COMPOSE_FILE down
    docker-compose -f $DOCKER_COMPOSE_FILE up -d
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∏–∑ –±—ç–∫–∞–ø–∞
    if [ -f "$BACKUP_FILE" ]; then
        echo "üîÑ Restoring database from backup..."
        docker exec -i aptechka_db_prod psql -U aptechka_user aptechka_prod < $BACKUP_FILE
    fi
    
    echo "‚ùå Deployment failed and rolled back"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
if docker exec aptechka_db_prod pg_isready -U aptechka_user -d aptechka_prod; then
    echo "‚úÖ Database is healthy"
else
    echo "‚ùå Database health check failed"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
echo "üßπ Cleaning up old backups..."
ls -t $BACKUP_DIR/backup_*.sql | tail -n +11 | xargs -r rm

echo "üéâ Production deployment completed successfully!"
echo ""
echo "üìã Service URLs:"
echo "  - Webhook server: http://localhost:8081"
echo "  - Database: localhost:5433"
echo ""
echo "üìù Useful commands:"
echo "  - View logs: make logs-prod"
echo "  - Stop services: make stop-prod"
echo "  - Restart services: make prod"
echo ""
echo "üíæ Latest backup: $BACKUP_FILE"
